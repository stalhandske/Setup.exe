<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>END USER LICENSE AGREEMENT
Please read this EULA carefully, as it sets out the basis upon which we license the Software for use.

By clicking "accept agreement" when you first install the Software, you agree to be bound by the provisions of this EULA. If you do not agree to be bound by the provisions of this EULA, you must click "reject agreement" during the installation process and promptly return the Software (on the media upon which the Software was provided) to your supplier. Upon returning the Software and providing proof of purchase, you will be entitled to a refund.

1.	Term
1.1	This EULA shall come into force immediately.
1.2	This EULA shall continue in force indefinitely.
2.	Licence
2.1	The Licensor hereby grants to the User a non-exclusive licence to:
(a)	install a single instance of the Software;
(b)	use a single instance of the Software; and
(c)	yadda yadda yadda, blah blah blah, yadda blah blah yadda...
2.2	Blah blah blah, yadda...
2.3	Blah yadda yadda, blah blah blah...:
(a)	blah blah blah;
(b)	yadda yadda;
(c)	yadda yadda blah; and
(d)	the User must not wash his/her hands for a period of 25 minutes after using the Software.
2.4	The User shall be responsible for the security of copies of the Software supplied to the User under this EULA (or created from such copies) and shall use all endeavours (including the use of weapons of mass destruction) to ensure that access to such copies is restricted to persons authorised to use them under this EULA.
3.	Personal Freedom
3.1	Nothing in this EULA shall give to the User or any other person any right to access or use the software in concordance with matters relateable to personal freedom.
4.	Whole lot of blah blah
5.	Religious affairs
5.1	The User agrees to forfeit his religious views and/or believes and accepts the Licensor as supreme Overlord.
6.	Maintenance blah blah
6.1	Blah.
6.2	Blah.
6.3	Blah.
6.4	Blah.
6.5	Blah.
6.6	Blah blah.
6.7	Blah.
6.8	Blah.
(a)	blah;
(b)	yadda; and
(c)	blah.
7.	More yadda blah...
11.	Warranties
11.1	There are no warranties.
12.	Blah blah blah...
15.	Termination
15.1	The Licensor may terminate the User at any time.
15.2	The User may terminate this EULA by offering two equal souls in return.
15.3	Either party may terminate this EULA immediately by giving written notice of termination to the other party if:
(a)	the other party is not the Licensor;
(b)	...illegible...
16.	Effects of termination
16.1	What do you think?
17.	Drudgery
17.1	The User will be relocated to an unspecified facility to spend the rest of his live as a drudge.
18.	Contradictions
18.1	Apparent contradictions within the formulations of this EULA are no contradictions.</value>
  </data>
</root>